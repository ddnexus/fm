#!/usr/bin/env zsh

__fm-panel() {
    local query key items=()
    local -P n=0 expect res

    __fm-view-${view:l} |
        fzf ${(P)=${:-FM_${(U)fm_mode}_FZF_OPTS}} \
                --prompt="$(__fm-prompt)" \
                --expect=${(Pj|,|)${:-__fm_${fm_mode}_keys}} \
                --preview="$fm_root/preview/panel {} $view $hidden $rg_query" \
                --bind="${FM_KEY_SELECT_ALL}:select-all" \
                --preview-window=$FM_PREVIEW_MODES[$preview[${fm_mode}-panel]] \
                --print-query \
                --ansi \
                --multi \
                --no-clear \
                $@ |
            local lines=( "${(@f)$(</dev/stdin)}" )

    res=$?; if [[ $res -gt 1 ]] return $res # 1 fzf no match
    query=$lines[1]
    key=$lines[2]
    lines=( ${lines:2} )

    header=()
    sort=false
    __fm-set-items

    if [[ $key == $FM_KEY_MENU ]] __fm-menu

    case $key in
    # FM UI
        $FM_KEY_REFRESH|REFRESH|MENU|'')     : ;; # explicit refresh / MENU toggles back from menu panel / no key
        $FM_KEY_PREVIEW|PREVIEW)             __fm-cycle-preview ${fm_mode}-panel ;;
        #FM_KEY_SELECT_ALL is a bind key
        $FM_KEY_NOTIFY_WD|NOTIFY_WD)         __fm-notify "Working Dir: $PWD" ;;
        $FM_KEY_HIDDEN|HIDDEN)               __fm-toggle-hidden ;;
        $FM_KEY_SORT|SORT)                   __fm-sort-items ;;
        esc|ctrl-c|ctrl-z|$FM_KEY_QUIT|QUIT) return 0 ;;
    # FM Views
        double-click|$FM_KEY_VIEW_ITEM|VIEW_ITEM) __fm-view-item ;;
        $FM_KEY_VIEW_DIR|VIEW_DIR)           view=DIR;  fs_view=DIR ;;
        $FM_KEY_VIEW_FIND|VIEW_FIND)         view=FIND; fs_view=FIND ;;
        $FM_KEY_VIEW_GREP|VIEW_GREP)         __fm-set-grep ;;
        $FM_KEY_VIEW_REC|VIEW_REC)           if [[ $view != REC ]] { view=REC } else { view=$fs_view } ;;
        $FM_KEY_VIEW_FAV|VIEW_FAV)           if [[ $view != FAV ]] { view=FAV } else { view=$fs_view } ;;
    # Navigation
        $FM_KEY_CD_HOME|CD_HOME)             __fm-cd $HOME ;;
        $FM_KEY_CD_ROOT|CD_ROOT)             __fm-cd / ;;
        $FM_KEY_CD_PARENT|CD_PARENT)         __fm-cd .. ;;
        $FM_KEY_CD_LAST|CD_LAST)             __fm-cd $OLDPWD ;;
        $FM_KEY_CD_CONTAIN|CD_CONTAIN)       __fm-cd ${items[1]:h} ;;
        $FM_KEY_CD_START|CD_START)           __fm-cd $__fm_start_dir ;;
    # FS Commands
        $FM_KEY_COPY|COPY)                   __fm-select copied ;;
        $FM_KEY_CUT|CUT)                     __fm-select cut ;;
        $FM_KEY_PASTE|PASTE)                 __fm-paste ;;
        $FM_KEY_NEW_FILE|NEW_FILE)           __fm-create File touch ;;
        $FM_KEY_NEW_DIR|NEW_DIR)             __fm-create Dir mkdir ;;
        $FM_KEY_FAV_ADD_WD|FAV_ADD_WD)       __fm-fav-add $PWD ;;
        $FM_KEY_FAV_ADD|FAV_ADD)             __fm-fav-add ;;
        $FM_KEY_MARK|MARK)                   __fm-mark ;;
        $FM_KEY_LINK|LINK)                   __fm-link ;;
        $FM_KEY_RENAME|RENAME)               if [[ $view == FAV ]] { __fm-fav-rename } else { __fm-rename } ;;
        $FM_KEY_REMOVE|REMOVE)               if [[ $view == FAV ]] { __fm-fav-remove } else { __fm-remove } ;;
        $FM_KEY_EXEC_ON|EXEC_ON)             __fm-switch-x ON ;;
        $FM_KEY_EXEC_OFF|EXEC_OFF)           __fm-switch-x OFF ;;
    # Tools
        $FM_KEY_EDIT|EDIT)                   __fm-edit ;;
        $FM_KEY_OPEN|OPEN)                   __fm-open ;;
        $FM_KEY_NEW_SHELL|NEW_SHELL)         __fm-new-shell ;;
        $FM_KEY_COPY_PATH|COPY_PATH)         __fm-copy-paths ;;
    # Widget
        $FM_KEY_PICK|PICK)                   print -- "${(Dq@)items}"; return 0 ;; # widget only
        $FM_KEY_PICK_WD|PICK_WD)             print -- "${(Dq)PWD}"; return 0 ;; # widget only
    # Added Tools
        *)                                   __fm-run-added ;;
    esac

    __fm-panel-start
}
